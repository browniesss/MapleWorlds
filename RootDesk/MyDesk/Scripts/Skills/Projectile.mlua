@Component
script Projectile extends Component

	@Sync
	property integer direction = 0

	@Sync
	property number speed = 0

	@Sync
	property Entity target = nil

	@Sync
	property number lifetTime = 0

	@Sync
	property number damage = 0

	@ExecSpace("Client")
	method void Init(string animId, integer direction, number speed, Entity target, boolean isRotate, number damage)
		self.Entity:AddComponent(DamageSkinSettingComponent)
		
		if target.Unit.isEnemy then
			-- 파란 데미지 스킨
			self.Entity.DamageSkinSettingComponent.DamageSkinId = "436ac27fca8c448ba4bcd31bbed3ba15"
		else
			-- 빨간 데미지 스킨
			self.Entity.DamageSkinSettingComponent.DamageSkinId = "7e39645af9454fffb17a5451e9194dda"
		end
		
		if 0 < direction then -- 오른쪽을 향함
			self.direction = 1
		else
			self.direction = -1	
		end
		
		self.Entity.SpriteRendererComponent.SpriteRUID = animId
		self.direction = direction
		self.speed = speed
		self.target = target
		self.damage = damage
		
		if self.target == nil then
			self.Entity:Destroy()
			return
		end
		
		if isRotate then
			self:RotateToTarget()
		end
		
		self:MoveToTarget()
	end

	@ExecSpace("Client")
	method void RotateToTarget()
		local targetPos = self.target.TransformComponent.Position
		local myPos = self.Entity.TransformComponent.Position
		local vec2Dif = Vector2(targetPos.x - myPos.x, targetPos.y - myPos.y)
		local radian = math.atan(vec2Dif.y, vec2Dif.x)
		
		self.Entity.TransformComponent.ZRotation = math.deg((radian + math.pi))
	end

	@ExecSpace("Client")
	method void MoveToTarget()
		local targetPos = Vector2(self.target.TransformComponent.Position.x, self.target.TransformComponent.Position.y + 0.5)
		_TweenLogic:MoveTo(self.Entity, targetPos, self.speed, EaseType.Linear)
		
		local deleteFunction = function()
			self.target.HitComponent:OnHit(self.Entity, self.damage, false, "", 1)
			self.Entity:Destroy()
		end
		
		_TimerService:SetTimerOnce(deleteFunction, self.speed)
	end

end