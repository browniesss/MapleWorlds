@Component
script LuckySeven extends SkillParent

	@ExecSpace("Client")
	method void ActivateSkill()
		__base:ActivateSkill()
		
		if self._T.projectileParent == nil then
			self._T.projectileParent = _EntityService:GetEntityByPath(_GameManager:GetGameMapName().."/ProjectileParent")
		end
		
		local animTIme = _Utils:GetAvatarAnimLength(self.caster.Unit.animationName)
		local event = ActionStateChangedEvent(self.caster.Unit.animationName, self.caster.Unit.animationName, 1, SpriteAnimClipPlayType.Onetime)
		self.caster.AvatarRendererComponent:GetBodyEntity():SendEvent(event)
		
		local basePos = self.Entity.TransformComponent.WorldPosition
		
		local function spawnMissile()
			local missile = _SpawnService:SpawnByModelId(
				"model://cd38ad89-1c52-45f2-8d86-d6be27475ba9",
				"ninja_stars",
				basePos + (Vector3.up * 0.3),
				self._T.projectileParent
			)
		
			missile.SpriteRendererComponent.SpriteRUID = "bfa25e5caf38486a943c8468383715fb"
			missile.Projectile:SetCaster(self.caster)
			missile.Projectile:SetShoot("bfa25e5caf38486a943c8468383715fb", self:IsTargetOnRight(self.target), self.skillProjectileSpeed
			, self.target, false, self.skillAmount)
		end
		
		-- 첫 번째 발사: 공격 모션 발생
		_TimerService:SetTimerOnce(spawnMissile, self.caster.Unit.attackTiming)
		-- 두 번째 발사: 공격 모션 발생 0.15초 후
		_TimerService:SetTimerOnce(spawnMissile, 0.15 + self.caster.Unit.attackTiming)
		
		-- 애니메이션 완료 이후 스킬 완료 처리
		_TimerService:SetTimerOnce(function()
			self:SkillEnd()
		end, animTIme)
	end

end