@Component
script UnitShop extends Component

	@Sync
	property SyncTable<Entity> shopItems

	@Sync
	property SyncTable<string> summonPools

	@Sync
	property SyncTable<integer> summonQueue

	@Sync
	property SyncTable<integer> summonDeck

	method void SetShop()
		for i, v in ipairs(self.summonDeck) do
			local unitData = _UnitService:GetUnitByIDFromCleint(self.summonPools[v])
			self.shopItems[i].UnitShopItem:Initialize(unitData,i, self, _SkillService:GetSkillByIDFromClient(unitData['skillID']))
		end
	end

	method void OnSpawn(integer id)
		table.insert(self.summonQueue, self.summonDeck[id])
		self.summonDeck[id] = self.summonQueue[1]
		table.remove(self.summonQueue, 1)
		
		self:SetShop()
	end

	method void InitShop()
		local shopItems = _EntityService:GetEntityByPath("/ui/Ingame_Shop_Group/UnitShop")
		local playerDeck = _EntityService:GetEntityByTag("Player").UserDeck
		local deckList = playerDeck.userDeck
		
		for i = 1, 5 do
			self.shopItems[i] = shopItems.Children[i]
			table.insert(self.summonDeck, i)
		end
		
		for i = 6, 8 do
			table.insert(self.summonQueue, i)
		end
		
		for i, modelId in ipairs(deckList) do
		    self.summonPools[i] = modelId
		end
		
		math.randomseed(os.time())
		-- 소환 배열을 섞는다.
		for i = 1, #self.summonPools - 1 do
			local j = math.random(i, #self.summonPools)
			self.summonPools[i], self.summonPools[j] = self.summonPools[j], self.summonPools[i]
		end
		
		self:SetShop()
	end

end