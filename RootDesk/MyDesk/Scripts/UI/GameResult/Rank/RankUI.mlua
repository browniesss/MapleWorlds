@Component
script RankUI extends Component

	@ExecSpace("ClientOnly")
	method void UpdateRankData(string userName, integer userScore)
		local currentRankTable = _RankingService:GetTop3RankTable()
		local path = self.Entity.Path
		
		local rankTable = {}
		local userRank = -1
		for rank, ranker in ipairs(currentRankTable) do	
			if ranker.name == userName then
				if ranker.score > userScore then
					ranker.score = userScore
				end
				userRank = rank
			end
			
			rankTable[#rankTable + 1] = ranker
		end
		
		if userRank < 0 then
			rankTable[#rankTable + 1] = {name=userName, score=userScore}
		end
		
		table.sort(rankTable, function(a,b) return a.score < b.score end)
		
		if #rankTable == 5 and rankTable[#rankTable].name == userName then
			rankTable[4] = rankTable[5]
		end
		
		for i = 1, 4 do
			local textComp = _EntityService:GetEntityByPath(path .. "/Rank_" .. tostring(i) .. "/UIText").TextComponent
			local user = rankTable[i]
			if user == nil then
				log("rank to set rank of" .. i)
			end
			
			textComp.Text = self:GetRankText(i, user.name, user.score)
		end
		
	end

	method string GetRankText(integer rank, string name, integer score)
		local strRank = tostring(rank)
		if rank > 3 then
			strRank = "4+"
		end
		
		return "#" .. strRank .." [" ..   name .. "] " .. tostring(score / 1000)
	end

end