@Component
script StageSelectorUI extends Component

	property Entity StageInfoPanel = "6f2a3df5-46e0-4b1b-a96d-923a3a4a4cb4"

	property table SelectButtonList = {}

	@Sync
	property UserStage userStage = nil

	property Entity nextButton = "8574a53d-397d-40b1-800c-8ece798f5108"

	property Entity prevButton = "054fd667-8cb8-4012-b703-28b84f55b65e"

	property Entity StageDescText = "9101cc5f-b84f-43e5-ae2b-e8cdd7699422"

	property Entity StageNameText = "f5f61aab-cb7c-48c1-9231-d95de1be9059"

	property Entity ChapterNameText = "13f8ea0f-9b9a-4a1b-bbcc-cd488fc9838c"

	property Entity ChapterNumberText = "1e8431b8-0f5b-4005-815d-83973e0c8c7d"

	method void UpdateData()
		local path = self.Entity.Path
		
		local openStage = self.userStage.openStage
		local selectStage = self.userStage.selectStage
		local selectChapter = self.userStage.selectChapter
		local openChapter = self.userStage.openChapter
		
		local stageDataList = _StageService:GetStageByChapter(selectChapter)
		local stageCount = #stageDataList
		
		self.StageInfoPanel = _EntityService:GetEntityByPath(path .. "/StageInfoPanel/panel")
		
		for i = 1, 6 do
			local entity = _EntityService:GetEntityByPath(path .. "/SelectPanel/StageSelectScroll/Select_" .. tostring(i))
			if i > stageCount then
				entity:SetEnable(false)
				continue
			end
			entity:SetEnable(true)
			
			entity.StageSelectItemUI:Init()
			self.SelectButtonList[i] = entity
			entity.StageSelectItemUI:AddCallback(function() 
				self:ClickButtonHanddler(i)
			end)
			
			entity.StageSelectItemUI:SetImage(stageDataList[i].button)
			entity.StageSelectItemUI:SetId(stageDataList[i].stage)
			entity.StageSelectItemUI:SetName(stageDataList[i].stage_name)
			
			if i <= openStage or selectChapter ~= openChapter then
				entity.StageSelectItemUI:SetNotSelected()
			end
			
			if (i > openStage and selectChapter == openChapter) or selectChapter > openChapter then
				entity.StageSelectItemUI:SetLocked()
			end
			
			if i == selectStage and selectChapter <= openChapter then
				entity.StageSelectItemUI:SetSelected()
				self.StageInfoPanel.SpriteGUIRendererComponent.ImageRUID = stageDataList[i].info
				self.StageDescText.TextComponent.Text = stageDataList[i].stage_desc
				self.StageNameText.TextComponent.Text = stageDataList[i].stage_name
				self.ChapterNameText.TextComponent.Text = stageDataList[i].chapter_name
				self.ChapterNumberText.TextComponent.Text = "CHAPTER " .. tostring(selectChapter)
			end
		end
			
		if selectChapter > openChapter then
			self.StageInfoPanel.SpriteGUIRendererComponent.ImageRUID = stageDataList[1].info
			self.StageDescText.TextComponent.Text = stageDataList[1].stage_desc
			self.StageNameText.TextComponent.Text = stageDataList[1].stage_name
				self.ChapterNameText.TextComponent.Text = stageDataList[1].chapter_name
				self.ChapterNumberText.TextComponent.Text = "CHAPTER " .. tostring(selectChapter)
		end
		
		self.nextButton.ButtonComponent.Enable = (selectChapter < _StageService.lastChapter)
		self.prevButton.ButtonComponent.Enable = (selectChapter > 1)
		
	end

	method void ClickButtonHanddler(integer id)
		local openStage = self.userStage.openStage
		local selectStage = self.userStage.selectStage
		local selectChapter = self.userStage.selectChapter
		local openChapter = self.userStage.openChapter
		
		local stageDataList = _StageService:GetStageByChapter(selectChapter)
		
		
		for i, entity in ipairs(self.SelectButtonList) do
			if i > openStage and selectChapter == openChapter then
				continue
			end
			entity.StageSelectItemUI:SetNotSelected()
			if i == id then
				entity.StageSelectItemUI:SetSelected()
				self.StageInfoPanel.SpriteGUIRendererComponent.ImageRUID = stageDataList[i].info
				self.StageDescText.TextComponent.Text = stageDataList[i].stage_desc
				self.StageNameText.TextComponent.Text = stageDataList[i].stage_name
				self.ChapterNameText.TextComponent.Text = stageDataList[i].chapter_name
				self.ChapterNumberText.TextComponent.Text = "CHAPTER " .. tostring(selectChapter)
				self.userStage.selectStage = stageDataList[i].stage
			end
			
			local rankingListUI =  _EntityService:GetEntityByPath("/ui/LobbyInfoUI/StageSelectUI/StageInfoPanel/stagePanel/rankingPanel/RankingListUI")
			rankingListUI.Enable = false
			rankingListUI.Visible = false
			
			_RankingService:DeleteData()
			rankingListUI.StageRankingListUI:RefreshRankListItem()
		end
	end

	method void SetUserStageComp(UserStage newComp)
		self.userStage = newComp
		newComp.updateList[#newComp.updateList + 1] = function() self:UpdateData() end
		
		self.nextButton.CallBackButton.callback = function() 
			if self.userStage.selectChapter >= _StageService.lastChapter then
				return
			end
			
			self.userStage.selectChapter += 1
			self.userStage.selectStage = 1
			self:UpdateData()
		end
		
		self.prevButton.CallBackButton.callback = function() 
			if self.userStage.selectChapter <= 1 then
				return
			end
			
			self.userStage.selectChapter -=1
			self.userStage.selectStage = 1
			self:UpdateData()
		end
	end

end