@Logic
script SpawnManager extends Logic

	@Sync
	property Entity userWallet = "03a1c87b-00aa-49d9-9d14-ada3697851e0"

	@ExecSpace("Server")
	method void Spawn(string modelID, integer price)
		if not self:IsCanSpawn(price) then
			return
		end
		log("맵 네임: ".._GameManager:GetGameMapName())
		local spawnParent = _EntityService:GetEntityByPath(_GameManager:GetGameMapName()..'/MyMonsterList')
		local spawnPos = _EntityService:GetEntityByPath(_GameManager:GetGameMapName().."/MyMonsterList/MySpawnPoint")
		local spawnEntity = _SpawnService:SpawnByModelId(modelID, "Pig", spawnPos.TransformComponent.Position, spawnParent)
		local unitData = _UnitService:GetUnitByIDFromServer(modelID)
		local skillData = _SkillService:GetSkillByIDFromServer(unitData["skillID"])
			
		spawnEntity.Unit:Spawn(unitData, skillData)
				
		self:GetUserWallet().MesoWallet:UseMeso(price)
	end

	@ExecSpace("Server")
	method void SpawnEnemy(string modelID)
		local spawnParent = _EntityService:GetEntityByPath(_GameManager:GetGameMapName() .."/EnemyList")
		local spawnPos = _EntityService:GetEntityByPath(_GameManager:GetGameMapName() .."/EnemyList/EnemySpawnPoint")
		local unitData = _UnitService:GetUnitByIDFromServer(modelID)
		local skillData = _SkillService:GetSkillByIDFromServer(unitData["skillID"])
		local spawnEntity = _SpawnService:SpawnByModelId(modelID, "적"..unitData["name"], spawnPos.TransformComponent.Position, spawnParent)
			
		spawnEntity.Unit:SpawnEnemy(unitData, skillData)
	end

	method boolean IsCanSpawn(integer price)
		log(self:GetUserWallet().MesoWallet:GetMeso(), price)
		return self:GetUserWallet().MesoWallet:GetMeso() >= price
	end

	method Entity GetUserWallet()
		return _EntityService:GetEntityByPath(_GameManager:GetGameMapName() .. "/userWallet")
	end

end