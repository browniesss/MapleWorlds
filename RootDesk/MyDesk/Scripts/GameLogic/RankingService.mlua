@Logic
script RankingService extends Logic

	@Sync
	property SyncTable<string> RankData

	property any fetchCallback = nil

	@ExecSpace("Server")
	method void AddPoint(string storageKey, string userName, integer userScore)
		local ds = _DataStorageService:GetSortableDataStorage(storageKey)
		
		local getCode, lastScore = ds:GetAndWait(userName)
		if getCode ~= 0 then
			log("AddPoint get err: " .. getCode)
			return
		end
		
		if lastScore == nil or lastScore == 0 then
			lastScore = 9999999
		end
		
		if lastScore <= userScore then
			return
		end
		
		local setCode = ds:SetAndWait(userName, userScore)
		if setCode ~= 0 then
			log("AddPoint set err: " .. setCode)
		end
	end

	@ExecSpace("Server")
	method void FETCH(string storageKey)
		local ds = _DataStorageService:GetSortableDataStorage(storageKey)
		 
		-- 데이터들을 정렬된 순서로 가져옵니다.
		local errorCode, itemPages = ds:GetSortedAndWait(SortDirection.Ascending, 0, 9999999)
		if errorCode ~= 0 then
			log("fetch rank code:" .. errorCode)
			return
		end
		
		local items = itemPages:GetCurrentPageDatas()
		
		for i, item in pairs(items) do
		-- SortableDataStorageItem을 통해 Key값과 Value값을 조회할 수 있습니다.
			self.RankData[i] = _HttpService:JSONEncode({name=item.KeyInfo.Key, score=item.Value})
		end
	end

	@ExecSpace("ClientOnly")
	method table GetTop3RankTable()
		local table = {}
		
		for rank = 1, 4 do
			if rank > #self.RankData then
				table[rank] = {name="NONE", score=9999999}
				continue
			end
			
			local jsonData = self.RankData[rank]
			
			local info  = _HttpService:JSONDecode(jsonData)
			
			table[rank] = info
		end
		
		return table
	end

	method string GetRankKeyByTable(table data)
		local storageKey = "RANK"
		
		for key, value in pairs(data) do
			storageKey = storageKey .. "_" .. string.upper(key) .. "_" .. string.upper(tostring(value))
		end
		
		return storageKey
	end

	@ExecSpace("ClientOnly")
	method table GetTop50RankTable()
		local table = {}
		
		for rank = 1, 50 do
			if rank > #self.RankData then
				table[rank] = {name="NONE", score=9999999}
				continue
			end
			
			local jsonData = self.RankData[rank]
			
			local info  = _HttpService:JSONDecode(jsonData)
			
			table[rank] = info
		end
		
		return table
	end

	@ExecSpace("Client")
	method void RefreshRankListUI()
		self.fetchCallback()
	end

	@ExecSpace("ClientOnly")
	method void OnSyncProperty(string name, any value)
		log("온싱크"..name.."밸류:"..tostring(value))
		self.fetchCallback()
	end

	@ExecSpace("Server")
	method void DeleteData()
		for rank = 1, 50 do
			table[rank] = {name="NONE", score=9999999}
		end
	end

end