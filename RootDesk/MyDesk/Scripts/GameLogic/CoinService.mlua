@Logic
script CoinService extends Logic

	@Sync
	property integer FirstFreeCoin = 0

	@Sync
	property integer FirstPaidCoin = 0

	@Sync
	property integer SecondFreeCoin = 0

	@Sync
	property integer SeconPaidCoin = 0

	@ExecSpace("ServerOnly")
	method integer SAVE()
		local uid = _UserService.LocalPlayer.PlayerComponent.UserId
		local ds = _DataStorageService:GetUserDataStorage(uid)
		
		local data = {}
		
		data["FirstFreeCoin"] = tostring(self.FirstFreeCoin)
		data["FirstPaidCoin"] = tostring(self.FirstPaidCoin)
		data["SecondFreeCoin"] = tostring(self.SecondFreeCoin)
		data["SeconPaidCoin"] = tostring(self.SeconPaidCoin)
		
		return ds:SetAndWait("COIN", _HttpService:JSONEncode(data))
	end

	@ExecSpace("ServerOnly")
	method integer LOAD()
		local uid = _UserService.LocalPlayer.PlayerComponent.UserId
		local ds = _DataStorageService:GetUserDataStorage(uid)
		
		local errCode, res = ds:GetAndWait("COIN")
		if errCode ~= 0 then
			return errCode
		end
		
		local resTable = _HttpService:JSONDecode(res)
		
		return 0
	end

	@ExecSpace("ServerOnly")
	method integer INIT()
		self.FirstFreeCoin = 0
		self.FirstPaidCoin = 0
		self.SecondFreeCoin = 0
		self.SeconPaidCoin = 0
		
		return self:SAVE()
	end

	@ExecSpace("ServerOnly")
	method void OnBeginPlay()
		local errCode = self:LOAD()
		
		if errCode == 1000002 then
			errCode = self:INIT()
		end
		
		if errCode > 0 then
			local uid = _UserService.LocalPlayer.PlayerComponent.UserId
			log_error(uid, "COIN SERVICE FAIL TO GET OR CREATE, code: ", errCode)
			_UserService:KickUser(uid, KickReason.WorldError)
		end
	end

	@EventSender("Service", "UserService")
	handler HandleUserLeaveEvent(UserLeaveEvent event)
		--------------- Native Event Sender Info ----------------
		-- Sender: UserService
		-- Space: Server
		---------------------------------------------------------
		
		-- Parameters
		local ProfileCode = event.ProfileCode
		local UserId = event.UserId
		
		local user = _UserService.LocalPlayer.PlayerComponent
		if user.UserId ~= UserId or user.ProfileCode ~= ProfileCode then
			return
		end
		
		self:SAVE()
	end

end