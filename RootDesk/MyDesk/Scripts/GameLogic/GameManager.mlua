@Logic
script GameManager extends Logic

	property Entity skillSelectUI = "ec7b9d8d-b2c2-4ee8-b95c-58564c8a4763"

	property SyncTable<Entity> skillBtn

	property Entity shopUI = "e0ec4a39-4a35-4e17-95aa-c16dee01f5fa"

	property Entity infoUI = "a07f182a-214a-414d-b995-9863eaa71d62"

	@Sync
	property integer chapterIndex = 0

	@Sync
	property integer mapIndex = 0

	@ExecSpace("ClientOnly")
	method void OnBeginPlay()
		for i = 1, 3 do
			table.insert(self.skillBtn, self.skillSelectUI.Children[i])
		end
	end

	@ExecSpace("Client")
	method void OpenSkillSelect()
		_TweenLogic:MoveTo(self.skillSelectUI, Vector2(0, 0), 0.3, EaseType.CircEaseIn)
		
		local currentIngameSkills = _UserService.LocalPlayer.PlayerCharacter.ingameSkills
		local allSkillData = _SkillManager.ingameSkillData
		
		-- 후보 스킬 목록 생성
		local availableSkills = {}
		for skillID, baseData in pairs(allSkillData) do
		    local currentLevel = currentIngameSkills[skillID] or 0
		    if currentLevel < baseData["maxLevel"] then
		        table.insert(availableSkills, skillID)
		    end
		end
		
		-- 선택할 수 있는 스킬 수 결정 (최대 3개)
		local choiceCount = math.min(3, #availableSkills)
		if choiceCount == 0 then
		    return
		end
		
		-- 랜덤으로 3개 뽑기
		for i = 1, choiceCount do
		    local index = math.random(1, #availableSkills)
		    local skillID = availableSkills[index]
		    local skillData = allSkillData[skillID]
		    table.remove(availableSkills, index)  -- 같은 스킬 중복 방지
		
			local currentLevel = currentIngameSkills[skillID] or 0
		    local descList = _UtilLogic:Split(skillData["desc"], "|")
		    local descIndex = math.min(currentLevel + 1, #descList)  -- 선택창은 "다음 레벨" 설명을 보여주기 위해 +1
		
		    local selectedDesc = descList[descIndex] or "설명이 없습니다."
		
		    -- UI 버튼에 정보 넣기
		    self.skillBtn[i].Children[1].SpriteGUIRendererComponent.ImageRUID = skillData["icon"]
		    self.skillBtn[i].Children[2].TextComponent.Text = skillData["name"]
		    self.skillBtn[i].Children[3].TextComponent.Text = selectedDesc
		    self.skillBtn[i].SkillButton.skillID = skillID
		end
		
		-- 만약 선택지 수가 3개 미만이면 나머지 버튼은 비활성화
		for i = choiceCount + 1, 3 do
		    self.skillBtn[i].Children[1].SpriteGUIRendererComponent.ImageRUID = ""
		    self.skillBtn[i].Children[2].TextComponent.Text = ""
		    self.skillBtn[i].Children[3].TextComponent.Text = ""
		    self.skillBtn[i].SkillButton.skillID = nil
		end
	end

	@ExecSpace("Client")
	method void CloseSkillSelect()
		_TweenLogic:MoveTo(self.skillSelectUI, Vector2(0, -800), 0.3, EaseType.CircEaseOut)
	end

	@ExecSpace("Server")
	method void GameStart(integer chapterIndex, integer mapIndex)
		self.chapterIndex = chapterIndex
		self.mapIndex = mapIndex
		
		self:EnableUI()
		-- 인게임 UI 활성화
	end

	method void GameEnd()
		
	end

	method string GetGameMapName()
		return "/maps/Chapter"..self.chapterIndex
	end

	@ExecSpace("Client")
	method void EnableUI()
		-- 인게임 UI 활성화
		self.shopUI.Enable = true
		self.shopUI.Visible = true
		self.infoUI.Enable = true
		self.infoUI.Visible = true
	end

	@EventSender("Service", "InputService")
	handler HandleKeyDownEvent(KeyDownEvent event)
		--------------- Native Event Sender Info ----------------
		-- Sender: InputService
		-- Space: Client
		---------------------------------------------------------
		
		-- Parameters
		local key = event.key
		---------------------------------------------------------
		if key == KeyboardKey.C then
			self:OpenSkillSelect()
		end
	end

end