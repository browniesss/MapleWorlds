@Logic
script UserDataManager extends Logic

	@Sync
	property number level = 0

	@Sync
	property SyncTable<string> deck

	@Sync
	property number coin = 0

	@ExecSpace("ServerOnly")
	method void UpdateUser(string userId)
		local userDS = _DataStorageService:GetUserDataStorage(userId)
		
		local errorcode 
		errorcode = userDS:SetAndWait("level", tostring(self.level))
		if not errorcode == 0 then 
		    error ("UpdateUser set level" + tostring(errorcode))
		end
		
		errorcode = userDS:SetAndWait("coin", tostring(self.coin))
		if not errorcode == 0 then 
		    error("UpdateUser set coin" + tostring(errorcode))
		end
		
		errorcode = userDS:SetAndWait("deck", _UtilLogic:TableToString(self.deck))
		if not errorcode == 0 then 
		    error("UpdateUser set deck" + tostring(errorcode))
		end
	end

	@ExecSpace("ServerOnly")
	method void SyncUser(string userId)
		local userDS = _DataStorageService:GetUserDataStorage(userId)
		
		userDS:GetAsync("level", function(errorcode, key, value) 
		    if errorcode == 1000002 then
		        value = "1"
		        errorcode = userDS:SetAndWait("level", value)
		    end
		    
		    if not errorcode == 0 then
		        error(errorcode)
		    end
		    
		    if key == "level" then 
		        self.level = tonumber(value)
		    end  
		    
		end)
		
		userDS:GetAsync("coin", function(errorcode, key, value) 
		    if errorcode == 1000002 then
		        value = "0"
		        errorcode = userDS:SetAndWait("coin", value)
		    end
		    
		    if not errorcode == 0 then
		        error(errorcode)
		    end
		    
		    if key == "coin" then 
		        self.coin = tonumber(value)
		    end  
		    
		end)
		
		userDS:GetAsync("deck", function(errorcode, key, value) 
		    if errorcode == 1000002 then
		        local initDeck = {}
				
				initDeck[1] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
				initDeck[2] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
				initDeck[3] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
				initDeck[4] = "model://5aac7c14-9173-4d47-96f1-5fc5429e36c4"
				initDeck[5] = "model://f2205e74-b8c8-4103-a768-59b58f8e2f55"
				initDeck[6] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
				initDeck[7] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
				initDeck[8] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
				
		        value = _HttpService:JSONEncode(initDeck)
		        errorcode = userDS:SetAndWait("deck", value)
		    end
		    
		    if not errorcode == 0 then
		        error(errorcode)
		    end
		    
		    if key == "deck" then 
				if value == nil then
					
					print("user deck is nil, so init again")
					local initDeck = {}
				
					initDeck[1] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
					initDeck[2] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
					initDeck[3] = "model://4a6f379a-312c-4ba4-8837-8b4a2a117b60"
					initDeck[4] = "model://5aac7c14-9173-4d47-96f1-5fc5429e36c4"
					initDeck[5] = "model://f2205e74-b8c8-4103-a768-59b58f8e2f55"
					initDeck[6] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
					initDeck[7] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
					initDeck[8] = "model://eacb328a-428a-474c-b7e3-cb313b099806"
					
			        value = _HttpService:JSONEncode(initDeck)
			        errorcode = userDS:SetAndWait("deck", value)
					
					if not errorcode == 0 then
			    	    error(tostring(errorcode))
			    	end
				end
		        local newTable = _HttpService:JSONDecode(value)
		        table.clear(self.deck)
				table.initialize(self.deck, newTable)
		    end  
		end)
	end

end