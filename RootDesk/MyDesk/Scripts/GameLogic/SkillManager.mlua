@Logic
script SkillManager extends Logic

	property table ingameSkillData = {}

	method void OnBeginPlay()
		local loadData = _DataService:GetTable("IngameSkillData")
		
		for i = 1, loadData:GetRowCount() do
			local temp = {}
			
			temp["id"] = tonumber(loadData:GetCell(i, "id"))
			temp["name"] = (loadData:GetCell(i, "name"))
			temp["desc"] = (loadData:GetCell(i, "desc"))
			temp["modelID"] = (loadData:GetCell(i, "modelID"))
			temp["icon"] = (loadData:GetCell(i, "icon"))
			temp["amount"] = tonumber(loadData:GetCell(i, "amount"))
			temp["coolTime"] = tonumber(loadData:GetCell(i, "coolTime"))
			temp["maxLevel"] = tonumber(loadData:GetCell(i, "maxLevel"))
			
			self.ingameSkillData[temp["id"]] = temp
		end
	end

	@ExecSpace("Client")
	method void GetSkill(number skillID)
		local player = _UserService.LocalPlayer
		local currentIngameSkills = player.PlayerCharacter.ingameSkills
		local baseData = self.ingameSkillData[skillID]
		
		if not baseData then
		    log("⚠ skillID ["..tostring(skillID).."] 에 대한 데이터가 없습니다.")
		    return
		end
		
		local currentLevel = currentIngameSkills[skillID] or 0  -- 최소 1레벨로 기본
		
		if currentLevel == 0 then
			-- 스킬을 처음 획득 하는 부분
			local skill = _SpawnService:SpawnByModelId(baseData["modelID"], baseData["name"], Vector3.zero, _UserService.LocalPlayer)
			if not skill or not skill.IngameSkillBase then
				return
			end
		
			-- 스킬 1레벨 등록
			player.PlayerCharacter:SetIngameSkill(skillID, 1)
		
			local amount = baseData["amount"]
			local coolTime = baseData["coolTime"]
		
			-- 스킬 초기화
			skill.IngameSkillBase:Init(amount, coolTime)
		else
			-- 이미 스킬이 있는 경우
			local childSkill = player:GetChildByName(baseData["name"])
			if not childSkill or not childSkill.IngameSkillBase then
				return
			end
			
			player.PlayerCharacter:SetIngameSkill(skillID, currentLevel + 1)
			childSkill.IngameSkillBase:LevelUp()
		end
	end

	@ExecSpace("Client")
	method table GetSkillData(number skillID)
		return self.ingameSkillData[skillID]
	end

	method void UseSkill(string skillID, Entity caster, Entity target)
		local skillParent = _EntityService:GetEntityByPath("/maps/GameScene/SkillParent")
		-- 해당 부분에서 DataSet을 가져와서 처리할 지
		-- 그러면 skillID는 FireBall과 같은 형태로 두고, DataSet의 FireBall의 EntryID 및 여러 데이터를 받아와서 아래에서 스폰 처리 함.
		-- 데이터를 받아온 뒤 소환하는게 맞는 형태로 보임
		local skill = _SpawnService:SpawnByModelId(skillID,
			skillID,
			skillParent.TransformComponent.Position,
			skillParent)
		
		-- skillID의 DataSet을 가져온 뒤 아래 함수 실행
		-- skill.SkillParent:UseSkill(caster, target)
	end

end