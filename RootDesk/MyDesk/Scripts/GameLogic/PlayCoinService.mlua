@Logic
script PlayCoinService extends Logic

	@Sync
	property integer playCoin = 0

	@Sync
	property integer nextUpdateTs = 0

	property integer lastReceiveTs = 0

	property number currentTs = 0

	property integer maxPlayCoin = 5

	property integer playCoinRefreshTs = 60

	@ExecSpace("ServerOnly")
	method void OnBeginPlay()
		local nowTs = DateTime.UtcNow.Elapsed
		local uid = _UserService.LocalPlayer.PlayerComponent.UserId
		local ds = _DataStorageService:GetUserDataStorage(uid)
		
		local errCode, res = ds:GetAndWait("PLAY_COIN")
		if errCode ~= 0 then
			error("PLAY_COIN " .. tostring(errCode))
			return
		end
		
		if res == nil then
			self.playCoin = self.maxPlayCoin
			self.lastReceiveTs = nowTs
			
			self:SaveCoin(uid)
		end
		
		local userData = _HttpService:JSONDecode(res)
		
		self.playCoin = tonumber(userData["playCoin"])
		self.lastReceiveTs = tonumber(userData["lastReceiveTs"])
		
		if self.playCoin >= self.maxPlayCoin then
			return
		end
		
		while self.lastReceiveTs + self.playCoinRefreshTs * 1000 < nowTs do
			if self.playCoin >= self.maxPlayCoin then
				break
			end
			
			self.lastReceiveTs += self.playCoinRefreshTs * 1000
			self.playCoin += 1
		end
		
		
	end

	@ExecSpace("ServerOnly")
	method void OnUpdate(number delta)
		if self.playCoin >= self.maxPlayCoin then
			return
		end
		
		self.currentTs += delta
		self.nextUpdateTs = self.playCoinRefreshTs - self.currentTs
		
		if self.currentTs < self.playCoinRefreshTs then
			return
		end
		
		local nowTs = DateTime.UtcNow.Elapsed
		
		self.currentTs = 0
		self.playCoin += 1
		
		self.lastReceiveTs = nowTs 
	end

	@ExecSpace("ServerOnly")
	method void OnEndPlay()
		local uid = _UserService.LocalPlayer.PlayerComponent.UserId
		self:SaveCoin(uid)
	end

	@ExecSpace("Server")
	method void UseCoin(any callback)
		if self.playCoin < 1 then
			return
		end
		
		self.playCoin += -1
		
		local saveCode = self:SaveCoin(senderUserId)
		if callback !=nil then
			callback(saveCode)
		end
	end

	@ExecSpace("ServerOnly")
	method integer SaveCoin(string uid)
			local ds = _DataStorageService:GetUserDataStorage(uid)
			
			local data = {}
			
			data["playCoin"] = self.playCoin
			data["lastReceiveTs"] = self.lastReceiveTs
			
			local save =  _HttpService:JSONEncode(data)
		
			return ds:SetAndWait("PLAY_COIN", save)
	end

	@EventSender("Service", "UserService")
	handler HandleUserLeaveEvent(UserLeaveEvent event)
		--------------- Native Event Sender Info ----------------
		-- Sender: UserService
		-- Space: Server
		---------------------------------------------------------
		
		-- Parameters
		-- local ProfileCode = event.ProfileCode
		-- local UserId = event.UserId
		---------------------------------------------------------
		local ProfileCode = event.ProfileCode
		local UserId = event.UserId
		
		self:SaveCoin(UserId)
	end

end